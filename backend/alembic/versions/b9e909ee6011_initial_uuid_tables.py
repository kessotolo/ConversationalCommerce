"""Initial UUID tables

Revision ID: b9e909ee6011
Revises:
Create Date: 2025-05-24 15:02:09.885057

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b9e909ee6011'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('email', sa.String(), unique=True,
                              index=True, nullable=True),
                    sa.Column('is_seller', sa.Boolean(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('ai_config',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('merchant_id', sa.UUID(), nullable=False),
                    sa.Column('style_tone', sa.String(), nullable=True),
                    sa.Column('auto_reply_enabled',
                              sa.Boolean(), nullable=True),
                    sa.Column('active_hours', sa.String(), nullable=True),
                    sa.Column('bot_name', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['merchant_id'], ['users.id']),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('products',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('name', sa.String(), nullable=False),
                    sa.Column('description', sa.String(), nullable=False),
                    sa.Column('price', sa.Float(), nullable=False),
                    sa.Column('image_url', sa.String(), nullable=True),
                    sa.Column('seller_id', sa.UUID(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(), nullable=True),
                    sa.Column('show_on_storefront',
                              sa.Boolean(), nullable=True),
                    sa.Column('show_on_whatsapp', sa.Boolean(), nullable=True),
                    sa.Column('show_on_instagram',
                              sa.Boolean(), nullable=True),
                    sa.Column('whatsapp_caption', sa.String(), nullable=True),
                    sa.Column('storefront_url', sa.String(), nullable=True),
                    sa.Column('video_url', sa.String(), nullable=True),
                    sa.Column('whatsapp_status_url',
                              sa.String(), nullable=True),
                    sa.Column('instagram_story_url',
                              sa.String(), nullable=True),
                    sa.Column('is_deleted', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['seller_id'], ['users.id']),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('seller_profiles',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=True),
                    sa.Column('store_name', sa.String(), nullable=True),
                    sa.Column('slug', sa.String(), unique=True, nullable=True),
                    sa.Column('bio', sa.String(), nullable=True),
                    sa.Column('logo_url', sa.String(), nullable=True),
                    sa.Column('banner_url', sa.String(), nullable=True),
                    sa.Column('whatsapp_number', sa.String(), nullable=True),
                    sa.Column('instagram_handle', sa.String(), nullable=True),
                    sa.Column('facebook_page', sa.String(), nullable=True),
                    sa.Column('tiktok_handle', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id']),
                    sa.UniqueConstraint('slug')
                    )
    op.create_table('orders',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('product_id', sa.UUID(), nullable=True),
                    sa.Column('message_id', sa.String(), nullable=True),
                    sa.Column('conversation_id', sa.String(), nullable=True),
                    sa.Column('whatsapp_number', sa.String(), nullable=True),
                    sa.Column('buyer_name', sa.String(), nullable=False),
                    sa.Column('buyer_phone', sa.String(), nullable=False),
                    sa.Column('buyer_email', sa.String(), nullable=True),
                    sa.Column('buyer_address', sa.Text(), nullable=True),
                    sa.Column('quantity', sa.Integer(), nullable=True),
                    sa.Column('total_amount', sa.Float(), nullable=False),
                    sa.Column('order_source', sa.Enum('whatsapp', 'website',
                                                      'instagram', name='ordersource'), nullable=True),
                    sa.Column('status', sa.Enum('pending', 'confirmed', 'processing', 'shipped',
                                                'delivered', 'cancelled', name='orderstatus'), nullable=True),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id']),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('idx_conversation_order', 'orders',
                    ['conversation_id'], unique=False)
    op.create_index('idx_whatsapp_order', 'orders', [
                    'whatsapp_number', 'message_id'], unique=False)
    op.create_index(op.f('ix_orders_buyer_phone'),
                    'orders', ['buyer_phone'], unique=False)
    op.create_table('conversation_history',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('order_id', sa.UUID(), nullable=True),
                    sa.Column('message', sa.String(), nullable=False),
                    sa.Column('sender_type', sa.Enum('merchant', 'customer',
                                                     'bot', name='sendertype'), nullable=False),
                    sa.Column('channel', sa.Enum('whatsapp', 'instagram',
                                                 'storefront', name='channeltype'), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), nullable=True),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id']),
                    sa.PrimaryKeyConstraint('id')
                    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('conversation_history')
    op.drop_index(op.f('ix_orders_buyer_phone'), table_name='orders')
    op.drop_index('idx_whatsapp_order', table_name='orders')
    op.drop_index('idx_conversation_order', table_name='orders')
    op.drop_table('orders')
    op.drop_table('seller_profiles')
    op.drop_table('products')
    op.drop_table('ai_config')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
