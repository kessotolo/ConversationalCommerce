"""clean_baseline

Revision ID: 07b5527603c1
Revises: 
Create Date: 2025-06-26 10:34:47.002506

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '07b5527603c1'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Add UUID extension if not exists
    op.execute('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"')
    op.create_table('carts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_carts'))
    )
    op.create_index(op.f('ix_carts_phone_number'), 'carts', ['phone_number'], unique=False)
    op.create_index(op.f('ix_carts_session_id'), 'carts', ['session_id'], unique=False)
    op.create_index(op.f('ix_carts_tenant_id'), 'carts', ['tenant_id'], unique=False)
    op.create_index(op.f('ix_carts_user_id'), 'carts', ['user_id'], unique=False)
    op.create_table('tenants',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('subdomain', sa.String(), nullable=False),
    sa.Column('custom_domain', sa.String(), nullable=True),
    sa.Column('domain_verified', sa.Boolean(), nullable=True),
    sa.Column('domain_verification_token', sa.String(), nullable=True),
    sa.Column('domain_verification_attempts', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('country_code', sa.String(length=2), nullable=True),
    sa.Column('kyc_status', sa.Enum('NOT_STARTED', 'PENDING', 'VERIFIED', 'REJECTED', name='kycstatus'), nullable=True),
    sa.Column('kyc_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('kyc_documents', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('kyc_updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=False),
    sa.Column('whatsapp_number', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('storefront_enabled', sa.Boolean(), nullable=True),
    sa.Column('settings', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_tenants')),
    sa.UniqueConstraint('custom_domain', name=op.f('uq_tenants_custom_domain')),
    sa.UniqueConstraint('subdomain', name=op.f('uq_tenants_subdomain'))
    )
    op.create_index(op.f('ix_tenants_email'), 'tenants', ['email'], unique=True)
    op.create_index(op.f('ix_tenants_phone_number'), 'tenants', ['phone_number'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False, server_default=sa.text('uuid_generate_v4()')),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('is_seller', sa.Boolean(), nullable=True, server_default=sa.text('false')),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_users_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('customers',
    sa.Column('id', sa.UUID(), nullable=False, server_default=sa.text('uuid_generate_v4()')),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('instagram_handle', sa.String(), nullable=True),
    sa.Column('whatsapp_id', sa.String(), nullable=True),
    sa.Column('first_seen', sa.DateTime(), nullable=True, server_default=sa.text('now()')),
    sa.Column('last_activity', sa.DateTime(), nullable=True, server_default=sa.text('now()')),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True, server_default=sa.text("'{}'") ),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_customers'))
    )
    op.create_index(op.f('ix_customers_email'), 'customers', ['email'], unique=True)
    op.create_index(op.f('ix_customers_phone'), 'customers', ['phone'], unique=True)
    op.create_table('products',
    sa.Column('id', sa.UUID(), nullable=False, server_default=sa.text('uuid_generate_v4()')),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('seller_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('now()')),
    sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('now()')),
    sa.Column('is_featured', sa.Boolean(), nullable=True, server_default=sa.text('false')),
    sa.Column('show_on_storefront', sa.Boolean(), nullable=True, server_default=sa.text('true')),
    sa.Column('show_on_whatsapp', sa.Boolean(), nullable=True, server_default=sa.text('true')),
    sa.Column('tenant_id', sa.UUID(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True, server_default=sa.text('false')),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], name=op.f('fk_products_seller_id_users')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_products_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_products'))
    )
    op.create_index(op.f('ix_products_tenant_id'), 'products', ['tenant_id'], unique=False)
    op.create_table('complaints',
    sa.Column('id', sa.UUID(), nullable=False, server_default=sa.text('uuid_generate_v4()')),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('product_id', sa.UUID(), nullable=True),
    sa.Column('order_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'in_review', 'escalated', 'resolved', name='complaintstatus'), nullable=True, server_default=sa.text("'pending'")),
    sa.Column('tier', sa.Enum('tier1', 'tier2', 'tier3', name='complainttier'), nullable=True, server_default=sa.text("'tier1'")),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('resolution', sa.String(), nullable=True),
    sa.Column('escalation_reason', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True, server_default=sa.text('now()')),
    sa.Column('updated_at', sa.DateTime(), nullable=True, server_default=sa.text('now()')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_complaints'))
    )
    op.create_table('alert_config',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_alert_config_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_alert_config'))
    )
    op.create_table('behavior_patterns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('pattern_type', sa.String(), nullable=False),
    sa.Column('conditions', sa.JSON(), nullable=False),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('threshold', sa.Float(), nullable=False),
    sa.Column('cooldown_minutes', sa.Integer(), nullable=True),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_behavior_patterns_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_behavior_patterns'))
    )
    op.create_table('content_filter_rules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('field', sa.String(), nullable=False),
    sa.Column('condition', sa.String(), nullable=False),
    sa.Column('value', sa.String(), nullable=False),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_content_filter_rules_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_content_filter_rules'))
    )
    op.create_table('kyc_info',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('business_name', sa.String(), nullable=False),
    sa.Column('id_number', sa.String(), nullable=False),
    sa.Column('id_type', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'approved', 'rejected', name='kycstatusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_kyc_info_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kyc_info'))
    )
    op.create_table('saved_payment_methods',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('customer_id', sa.UUID(), nullable=False),
    sa.Column('type', sa.Enum('CARD', 'MOBILE_MONEY', 'BANK_TRANSFER', 'USSD', name='paymentmethodtype'), nullable=False),
    sa.Column('details', sa.JSON(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name=op.f('fk_saved_payment_methods_customer_id_customers')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_saved_payment_methods'))
    )
    op.create_index(op.f('ix_saved_payment_methods_customer_id'), 'saved_payment_methods', ['customer_id'], unique=False)
    op.create_table('seller_shipping_providers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('provider_type', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('base_fee', sa.Integer(), nullable=False),
    sa.Column('per_km_fee', sa.Integer(), nullable=False),
    sa.Column('min_distance', sa.Float(), nullable=False),
    sa.Column('max_distance', sa.Float(), nullable=False),
    sa.Column('coverage_area', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('contact_name', sa.String(), nullable=False),
    sa.Column('contact_phone', sa.String(), nullable=False),
    sa.Column('contact_whatsapp', sa.String(), nullable=True),
    sa.Column('estimated_delivery_time', sa.String(), nullable=True),
    sa.Column('delivery_days', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('delivery_hours', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_default', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('onboarding_status', sa.String(), nullable=True),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_seller_shipping_providers_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_seller_shipping_providers'))
    )
    op.create_index(op.f('ix_seller_shipping_providers_tenant_id'), 'seller_shipping_providers', ['tenant_id'], unique=False)
    op.create_table('storefront_assets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=True),
    sa.Column('file_path', sa.String(length=512), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('mime_type', sa.String(length=127), nullable=False),
    sa.Column('asset_type', sa.Enum('IMAGE', 'VIDEO', 'DOCUMENT', 'AUDIO', 'OTHER', name='assettype'), nullable=False),
    sa.Column('alt_text', sa.String(length=255), nullable=True),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('asset_metadata', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('usage_count', sa.Integer(), nullable=False),
    sa.Column('usage_locations', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('parent_asset_id', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_optimized', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_asset_id'], ['storefront_assets.id'], name=op.f('fk_storefront_assets_parent_asset_id_storefront_assets')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_storefront_assets_tenant_id_tenants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_assets'))
    )
    op.create_index('idx_asset_parent', 'storefront_assets', ['parent_asset_id'], unique=False)
    op.create_index('idx_asset_tenant', 'storefront_assets', ['tenant_id'], unique=False)
    op.create_index('idx_asset_type', 'storefront_assets', ['tenant_id', 'asset_type'], unique=False)
    op.create_table('storefront_components',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('component_type', sa.Enum('HERO', 'CAROUSEL', 'PRODUCT_GRID', 'PRODUCT_LIST', 'FEATURED_PRODUCTS', 'CATEGORY_SHOWCASE', 'TEXT_BLOCK', 'IMAGE_BLOCK', 'VIDEO_BLOCK', 'TESTIMONIALS', 'NEWSLETTER_SIGNUP', 'CONTACT_FORM', 'CALL_TO_ACTION', 'SOCIAL_FEED', 'CUSTOM', name='componenttype'), nullable=False),
    sa.Column('properties', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('constraints', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('allowed_placements', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('version', sa.String(length=50), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('property_schema', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_storefront_components_tenant_id_tenants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_components'))
    )
    op.create_index('idx_component_tenant', 'storefront_components', ['tenant_id'], unique=False)
    op.create_index('idx_component_type', 'storefront_components', ['tenant_id', 'component_type'], unique=False)
    op.create_table('storefront_page_templates',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('page_type', sa.Enum('HOME', 'PRODUCT', 'CATEGORY', 'ABOUT', 'CONTACT', 'CUSTOM', 'CHECKOUT', 'CART', 'ACCOUNT', 'POLICY', name='pagetype'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('layout_structure', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('component_slots', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('parent_template_id', sa.UUID(), nullable=True),
    sa.Column('inheritance_rules', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['parent_template_id'], ['storefront_page_templates.id'], name=op.f('fk_storefront_page_templates_parent_template_id_storefront_page_templates')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_storefront_page_templates_tenant_id_tenants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_page_templates'))
    )
    op.create_index('idx_template_parent', 'storefront_page_templates', ['parent_template_id'], unique=False)
    op.create_index('idx_template_tenant', 'storefront_page_templates', ['tenant_id'], unique=False)
    op.create_index('idx_template_type', 'storefront_page_templates', ['tenant_id', 'page_type'], unique=False)
    op.create_table('team_invite',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('invitee_phone', sa.String(), nullable=True),
    sa.Column('invitee_email', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'accepted', 'expired', 'revoked', name='teaminvitestatusenum'), nullable=False),
    sa.Column('invited_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('accepted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_team_invite_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_team_invite'))
    )
    op.create_table('ai_config',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('merchant_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('style_tone', sa.String(), nullable=True),
    sa.Column('auto_reply_enabled', sa.Boolean(), nullable=True),
    sa.Column('active_hours', sa.String(), nullable=True),
    sa.Column('bot_name', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['merchant_id'], ['users.id'], name=op.f('fk_ai_config_merchant_id_users')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_ai_config_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_ai_config'))
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('resource_type', sa.String(), nullable=False),
    sa.Column('resource_id', sa.String(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.String(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_audit_logs_tenant_id_tenants')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_audit_logs_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_audit_logs'))
    )
    op.create_table('content_analysis_results',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('rule_id', sa.UUID(), nullable=True),
    sa.Column('content_type', sa.String(), nullable=False),
    sa.Column('content_id', sa.String(), nullable=False),
    sa.Column('field', sa.String(), nullable=False),
    sa.Column('original_content', sa.String(), nullable=False),
    sa.Column('analysis_type', sa.String(), nullable=False),
    sa.Column('result', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('review_status', sa.String(), nullable=True),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], name=op.f('fk_content_analysis_results_reviewed_by_users')),
    sa.ForeignKeyConstraint(['rule_id'], ['content_filter_rules.id'], name=op.f('fk_content_analysis_results_rule_id_content_filter_rules')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_content_analysis_results_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_content_analysis_results'))
    )
    op.create_table('kyc_document',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('kyc_info_id', sa.UUID(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=False),
    sa.Column('file_type', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('uploaded', 'verified', 'rejected', name='kycdocumentstatusenum'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['kyc_info_id'], ['kyc_info.id'], name=op.f('fk_kyc_document_kyc_info_id_kyc_info')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_kyc_document'))
    )
    op.create_table('pattern_detections',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('pattern_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('detection_type', sa.String(), nullable=False),
    sa.Column('confidence_score', sa.Float(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('review_status', sa.String(), nullable=True),
    sa.Column('reviewed_by', sa.UUID(), nullable=True),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.Column('resolution_notes', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['pattern_id'], ['behavior_patterns.id'], name=op.f('fk_pattern_detections_pattern_id_behavior_patterns')),
    sa.ForeignKeyConstraint(['reviewed_by'], ['users.id'], name=op.f('fk_pattern_detections_reviewed_by_users')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_pattern_detections_tenant_id_tenants')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_pattern_detections_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_pattern_detections'))
    )
    op.create_table('shipping_couriers',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('provider_id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('whatsapp', sa.String(), nullable=True),
    sa.Column('vehicle_type', sa.String(), nullable=True),
    sa.Column('vehicle_description', sa.String(), nullable=True),
    sa.Column('profile_photo_url', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('available', sa.Boolean(), nullable=True),
    sa.Column('onboarding_completed', sa.Boolean(), nullable=True),
    sa.Column('onboarding_date', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['provider_id'], ['seller_shipping_providers.id'], name=op.f('fk_shipping_couriers_provider_id_seller_shipping_providers')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_shipping_couriers_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_shipping_couriers'))
    )
    op.create_index(op.f('ix_shipping_couriers_tenant_id'), 'shipping_couriers', ['tenant_id'], unique=False)
    op.create_table('storefront_banners',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('banner_type', sa.Enum('HERO', 'PROMOTIONAL', 'ANNOUNCEMENT', 'CATEGORY', 'SEASONAL', 'CUSTOM', name='bannertype'), nullable=False),
    sa.Column('placement', sa.Enum('HEADER', 'HOMEPAGE', 'CATEGORY_PAGE', 'PRODUCT_PAGE', 'FOOTER', 'SIDEBAR', 'POPUP', name='bannerplacement'), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('subtitle', sa.String(length=500), nullable=True),
    sa.Column('content', sa.String(length=1000), nullable=True),
    sa.Column('call_to_action', sa.String(length=255), nullable=True),
    sa.Column('link_url', sa.String(length=500), nullable=True),
    sa.Column('asset_id', sa.UUID(), nullable=True),
    sa.Column('design_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('start_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('targeting_rules', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('impressions', sa.Integer(), nullable=False),
    sa.Column('clicks', sa.Integer(), nullable=False),
    sa.Column('conversions', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['storefront_assets.id'], name=op.f('fk_storefront_banners_asset_id_storefront_assets')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_storefront_banners_tenant_id_tenants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_banners'))
    )
    op.create_index('idx_banner_active_tenant', 'storefront_banners', ['tenant_id', 'is_active'], unique=False)
    op.create_index('idx_banner_placement', 'storefront_banners', ['tenant_id', 'placement'], unique=False)
    op.create_index('idx_banner_scheduling', 'storefront_banners', ['start_date', 'end_date'], unique=False)
    op.create_index('idx_banner_tenant', 'storefront_banners', ['tenant_id'], unique=False)
    op.create_table('storefront_configs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('subdomain_name', sa.String(length=63), nullable=False),
    sa.Column('custom_domain', sa.String(length=255), nullable=True),
    sa.Column('domain_verified', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'SCHEDULED', 'ARCHIVED', name='storefrontstatus'), nullable=False),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('scheduled_publish_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('published_by', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('meta_title', sa.String(length=255), nullable=True),
    sa.Column('meta_description', sa.String(length=500), nullable=True),
    sa.Column('theme_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('layout_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('social_links', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['published_by'], ['users.id'], name=op.f('fk_storefront_configs_published_by_users')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_storefront_configs_tenant_id_tenants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_configs')),
    sa.UniqueConstraint('custom_domain', name='uq_storefront_custom_domain'),
    sa.UniqueConstraint('subdomain_name', name='uq_storefront_subdomain'),
    sa.UniqueConstraint('tenant_id', name='uq_tenant_storefront_config')
    )
    op.create_index('idx_tenant_storefront', 'storefront_configs', ['tenant_id'], unique=False)
    op.create_table('storefront_logos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('variant', sa.Enum('PRIMARY', 'SECONDARY', 'DARK', 'LIGHT', 'MONOCHROME', 'FAVICON', 'MOBILE', name='logovariant'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('asset_id', sa.UUID(), nullable=False),
    sa.Column('display_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('alt_text', sa.String(length=255), nullable=False),
    sa.Column('responsive_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['storefront_assets.id'], name=op.f('fk_storefront_logos_asset_id_storefront_assets')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_storefront_logos_tenant_id_tenants'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_logos'))
    )
    op.create_index('idx_logo_tenant', 'storefront_logos', ['tenant_id'], unique=False)
    op.create_index('idx_logo_variant', 'storefront_logos', ['tenant_id', 'variant'], unique=False)
    op.create_index('idx_unique_active_logo_variant', 'storefront_logos', ['tenant_id', 'variant', 'is_active'], unique=True, postgresql_where=sa.text('is_active'))
    op.create_table('storefront_permissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role', sa.Enum('VIEWER', 'EDITOR', 'PUBLISHER', 'ADMIN', name='storefrontrole'), nullable=False),
    sa.Column('section_permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('component_permissions', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_storefront_permissions_tenant_id_tenants'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_storefront_permissions_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_permissions')),
    sa.UniqueConstraint('tenant_id', 'user_id', name='uq_user_tenant_permission')
    )
    op.create_index('idx_storefront_permission_tenant', 'storefront_permissions', ['tenant_id'], unique=False)
    op.create_index('idx_storefront_permission_user', 'storefront_permissions', ['user_id'], unique=False)
    op.create_table('cart_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cart_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price_at_add', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('variant_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['cart_id'], ['carts.id'], name=op.f('fk_cart_items_cart_id_carts'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_cart_items_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_cart_items'))
    )
    op.create_index(op.f('ix_cart_items_cart_id'), 'cart_items', ['cart_id'], unique=False)
    op.create_table('evidence',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('detection_id', sa.UUID(), nullable=False),
    sa.Column('evidence_type', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('collected_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['detection_id'], ['pattern_detections.id'], name=op.f('fk_evidence_detection_id_pattern_detections')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_evidence_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_evidence'))
    )
    op.create_table('orders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=True),
    sa.Column('seller_id', sa.UUID(), nullable=True),
    sa.Column('buyer_name', sa.String(), nullable=False),
    sa.Column('buyer_phone', sa.String(), nullable=False),
    sa.Column('buyer_email', sa.String(), nullable=True),
    sa.Column('buyer_address', sa.Text(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('order_source', sa.Enum('whatsapp', 'website', 'instagram', name='ordersource'), nullable=True),
    sa.Column('status', sa.Enum('pending', 'confirmed', 'processing', 'shipped', 'delivered', 'cancelled', name='orderstatus'), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('version', sa.Integer(), nullable=False),
    sa.Column('notification_sent', sa.Boolean(), nullable=True),
    sa.Column('last_notification_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_orders_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_orders'))
    )
    op.create_index(op.f('ix_orders_buyer_phone'), 'orders', ['buyer_phone'], unique=False)
    op.create_table('storefront_drafts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('storefront_config_id', sa.UUID(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('subdomain_name', sa.String(length=63), nullable=False),
    sa.Column('custom_domain', sa.String(length=255), nullable=True),
    sa.Column('meta_title', sa.String(length=255), nullable=True),
    sa.Column('meta_description', sa.String(length=500), nullable=True),
    sa.Column('theme_settings', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('layout_config', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('social_links', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_storefront_drafts_created_by_users')),
    sa.ForeignKeyConstraint(['storefront_config_id'], ['storefront_configs.id'], name=op.f('fk_storefront_drafts_storefront_config_id_storefront_configs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_drafts'))
    )
    op.create_index('idx_draft_storefront_config', 'storefront_drafts', ['storefront_config_id'], unique=False)
    op.create_table('storefront_versions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('storefront_config_id', sa.UUID(), nullable=False),
    sa.Column('version_number', sa.Integer(), nullable=False),
    sa.Column('created_by', sa.UUID(), nullable=False),
    sa.Column('change_summary', sa.String(length=255), nullable=True),
    sa.Column('change_description', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('configuration_snapshot', postgresql.JSONB(astext_type=sa.Text()), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], name=op.f('fk_storefront_versions_created_by_users')),
    sa.ForeignKeyConstraint(['storefront_config_id'], ['storefront_configs.id'], name=op.f('fk_storefront_versions_storefront_config_id_storefront_configs'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_storefront_versions'))
    )
    op.create_index('idx_storefront_version_created', 'storefront_versions', ['storefront_config_id', 'created_at'], unique=False)
    op.create_index('idx_unique_storefront_version', 'storefront_versions', ['storefront_config_id', 'version_number'], unique=True)
    op.create_table('violations',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('detection_id', sa.UUID(), nullable=True),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('severity', sa.String(), nullable=False),
    sa.Column('action', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('start_at', sa.DateTime(), nullable=True),
    sa.Column('end_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['detection_id'], ['pattern_detections.id'], name=op.f('fk_violations_detection_id_pattern_detections')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_violations_tenant_id_tenants')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_violations_user_id_users')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_violations'))
    )
    op.create_table('conversation_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=True),
    sa.Column('message', sa.String(), nullable=False),
    sa.Column('sender_type', sa.Enum('merchant', 'customer', 'bot', name='sendertype'), nullable=False),
    sa.Column('channel', sa.Enum('whatsapp', 'instagram', 'storefront', name='channeltype'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sa.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_conversation_history_order_id_orders')),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenants.id'], name=op.f('fk_conversation_history_tenant_id_tenants')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_conversation_history'))
    )
    op.create_table('order_channel_meta',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('channel', sa.Enum('whatsapp', 'instagram', 'storefront', name='channeltype'), nullable=False),
    sa.Column('message_id', sa.String(), nullable=True),
    sa.Column('chat_session_id', sa.String(), nullable=True),
    sa.Column('user_response_log', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_order_channel_meta_order_id_orders')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_channel_meta'))
    )
    op.create_table('order_items',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('order_id', sa.UUID(), nullable=False),
    sa.Column('product_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('created_at', sa.String(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], name=op.f('fk_order_items_order_id_orders')),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], name=op.f('fk_order_items_product_id_products')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_order_items'))
    )
    # Removing standalone constraints that cause ordering problems
    # These constraints should be added as part of the table definitions when tables are created
    # Foreign key constraints between tables have been removed to ensure clean migration
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_users_tenant_id_tenants'), 'users', type_='foreignkey')
    op.drop_constraint(op.f('fk_storefront_themes_tenant_id_tenants'), 'storefront_themes', type_='foreignkey')
    op.drop_constraint(op.f('uq_seller_profiles_slug'), 'seller_profiles', type_='unique')
    op.create_unique_constraint(op.f('seller_profiles_slug_key'), 'seller_profiles', ['slug'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(op.f('fk_products_tenant_id_tenants'), 'products', type_='foreignkey')
    op.drop_constraint(op.f('fk_conversation_events_tenant_id_tenants'), 'conversation_events', type_='foreignkey')
    op.drop_constraint(op.f('fk_conversation_events_order_id_orders'), 'conversation_events', type_='foreignkey')
    op.drop_constraint(op.f('fk_complaints_tenant_id_tenants'), 'complaints', type_='foreignkey')
    op.drop_constraint(op.f('fk_complaints_order_id_orders'), 'complaints', type_='foreignkey')
    op.create_table('alembic_version',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name=op.f('alembic_version_pkc'))
    )
    op.drop_table('order_items')
    op.drop_table('order_channel_meta')
    op.drop_table('conversation_history')
    op.drop_table('violations')
    op.drop_index('idx_unique_storefront_version', table_name='storefront_versions')
    op.drop_index('idx_storefront_version_created', table_name='storefront_versions')
    op.drop_table('storefront_versions')
    op.drop_index('idx_draft_storefront_config', table_name='storefront_drafts')
    op.drop_table('storefront_drafts')
    op.drop_index(op.f('ix_orders_buyer_phone'), table_name='orders')
    op.drop_table('orders')
    op.drop_table('evidence')
    op.drop_index(op.f('ix_cart_items_cart_id'), table_name='cart_items')
    op.drop_table('cart_items')
    op.drop_index('idx_storefront_permission_user', table_name='storefront_permissions')
    op.drop_index('idx_storefront_permission_tenant', table_name='storefront_permissions')
    op.drop_table('storefront_permissions')
    op.drop_index('idx_unique_active_logo_variant', table_name='storefront_logos', postgresql_where=sa.text('is_active'))
    op.drop_index('idx_logo_variant', table_name='storefront_logos')
    op.drop_index('idx_logo_tenant', table_name='storefront_logos')
    op.drop_table('storefront_logos')
    op.drop_index('idx_tenant_storefront', table_name='storefront_configs')
    op.drop_table('storefront_configs')
    op.drop_index('idx_banner_tenant', table_name='storefront_banners')
    op.drop_index('idx_banner_scheduling', table_name='storefront_banners')
    op.drop_index('idx_banner_placement', table_name='storefront_banners')
    op.drop_index('idx_banner_active_tenant', table_name='storefront_banners')
    op.drop_table('storefront_banners')
    op.drop_index(op.f('ix_shipping_couriers_tenant_id'), table_name='shipping_couriers')
    op.drop_table('shipping_couriers')
    op.drop_table('pattern_detections')
    op.drop_table('kyc_document')
    op.drop_table('content_analysis_results')
    op.drop_table('audit_logs')
    op.drop_table('ai_config')
    op.drop_table('team_invite')
    op.drop_index('idx_template_type', table_name='storefront_page_templates')
    op.drop_index('idx_template_tenant', table_name='storefront_page_templates')
    op.drop_index('idx_template_parent', table_name='storefront_page_templates')
    op.drop_table('storefront_page_templates')
    op.drop_index('idx_component_type', table_name='storefront_components')
    op.drop_index('idx_component_tenant', table_name='storefront_components')
    op.drop_table('storefront_components')
    op.drop_index('idx_asset_type', table_name='storefront_assets')
    op.drop_index('idx_asset_tenant', table_name='storefront_assets')
    op.drop_index('idx_asset_parent', table_name='storefront_assets')
    op.drop_table('storefront_assets')
    op.drop_index(op.f('ix_seller_shipping_providers_tenant_id'), table_name='seller_shipping_providers')
    op.drop_table('seller_shipping_providers')
    op.drop_index(op.f('ix_saved_payment_methods_customer_id'), table_name='saved_payment_methods')
    op.drop_table('saved_payment_methods')
    op.drop_table('kyc_info')
    op.drop_table('content_filter_rules')
    op.drop_table('behavior_patterns')
    op.drop_table('alert_config')
    op.drop_index(op.f('ix_tenants_phone_number'), table_name='tenants')
    op.drop_index(op.f('ix_tenants_email'), table_name='tenants')
    op.drop_table('tenants')
    op.drop_index(op.f('ix_carts_user_id'), table_name='carts')
    op.drop_index(op.f('ix_carts_tenant_id'), table_name='carts')
    op.drop_index(op.f('ix_carts_session_id'), table_name='carts')
    op.drop_index(op.f('ix_carts_phone_number'), table_name='carts')
    op.drop_table('carts')
    # ### end Alembic commands ###
